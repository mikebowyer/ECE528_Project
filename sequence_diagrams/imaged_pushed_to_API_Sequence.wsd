@startuml
title Image Upload Process

actor       Dashcam_Owner 
entity      Dashcam_Application
entity      "Website" as Website << AWS Elastic Beanstalk>>
boundary    "Upload Image API" as Image_Upload_API << AWS API Gateway >>
control     "Image Upload Function" as Lambda_Upload_Function << AWS Lambda Function >>
control     "Image Feature Detection" as AWS_Rekognition << AWS Rekognition >>
database    "Image Storage" as AWS_S3 << AWS S3 >>
database    "Metadata Storage" as AWS_DynamoDB << AWS DynamoDB >>

Dashcam_Owner -> Dashcam_Application: Start Dashcam Upload Application
Dashcam_Application -> Image_Upload_API: {Image, Latitude, Longitude}
Dashcam_Owner -> Website: Upload Image Using GUI
Website -> Image_Upload_API: {Image, Latitude, Longitude}
Image_Upload_API -> Lambda_Upload_Function: {Image, Latitude, Longitude}
Lambda_Upload_Function --> AWS_S3: {Image}
Lambda_Upload_Function <-- AWS_S3: {URL to Image}
Lambda_Upload_Function --> AWS_Rekognition: {Image}
AWS_Rekognition --> AWS_Rekognition: Detect Contents of Image
AWS_Rekognition --> Lambda_Upload_Function: {Bounding Box, Labels}
Lambda_Upload_Function --> AWS_S3: {Image with bounding box}
Lambda_Upload_Function <-- AWS_S3: {URL to Image with bounding box}
Lambda_Upload_Function --> AWS_DynamoDB: {Upload Time, Original Image URL, Labeled Image URL, Latitude, Longitude, [Features Detected in Image]}

@enduml